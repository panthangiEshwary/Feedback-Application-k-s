apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: feedback
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: api
          image: feedback-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: DB_PASS
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: backend
  #namespace: feedback
#spec:
  #type: NodePort           # <- change from ClusterIP to NodePort
  #selector:
  #  app: backend
#  ports:
   # - protocol: TCP
   #   port: 5000           # Cluster port inside Kubernetes
   #   targetPort: 5000
     # nodePort: 30050      # Fixed port on host machine /*

apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: feedback
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30050   # example NodePort



      
